b'Given an n x n grid  containing only values 0 and 1, where  0 represents water  and 1 represents land, find a water cell such that its distance to the nearest land cell is maximized, and return the distance.  If no land or water exists in the grid, return -1.\nThe distance used in this problem is the Manhattan distance:  the distance between two cells (x0, y0) and (x1, y1) is |x0 - x1| + |y0 - y1|.\n  \nExample 1:\n\nInput: grid = [[1,0,1],[0,0,0],[1,0,1]]\nOutput: 2\nExplanation: The cell (1, 1) is as far as possible from all the land with distance 2.\n\nExample 2:\n\nInput: grid = [[1,0,0],[0,0,0],[0,0,0]]\nOutput: 4\nExplanation: The cell (2, 2) is as far as possible from all the land with distance 4.\n\n  \nConstraints:\n\nn == grid.length\nn == grid[i].length\n1 <= n  <= 100\ngrid[i][j]  is 0 or 1\n\n'